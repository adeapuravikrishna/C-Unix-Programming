40 60

radepu - a6

  821 Mar 24 08:48 p1.c
 1096 Mar 24 08:49 p2.c


p1.c
---
> #include<stdio.h>
> #include<math.h>
> #include<stdlib.h>
> double zero( double (*f)(double x), double x1, double x3)
> {
> double x2;
> int count=0;
> f=sin;
> printf("zero:\n");
>    while(f(x1)>0 && f(x3)<0)
>      {          
>           x2=(x1+x3)/2;
>           
>           printf("%d:  ",count);
>           printf("x2=%.20f f2=%g\n",x2,f(x2));
>           if(x2 <= x1 || x2 >= x3 ||f(x2) == 0)
>            {
>              break;
>            }
>          
>           count++;     
>          if(f(x2) > 0)
>            {
>              x1 = x2;
>            }
>          else if(f(x2)!=0&&f(x2)<0)

already know f(x2) != 0 here due to check above

>            {
>              x3 = x2;
>            }
>      }
> return x2;
> }
> int main()
> {
> double x,diff,pi=4*atan(1);
> x=zero(sin,2,4);
> if(x==pi)
> {
> printf("main:\n");
> printf("\t x= %.20f\n",x);
> printf("\t pi= %.20f\n",pi);
> diff=x-pi;
> printf("\t diff= %.20f\n",diff);
> }
> }

Compile: gcc -std=c99 -pedantic -Wall -g -lm -o p1 p1.c


Run: ./p1
---
zero:
0:  x2=3.00000000000000000000 f2=0.14112
1:  x2=3.50000000000000000000 f2=-0.350783
2:  x2=3.25000000000000000000 f2=-0.108195
3:  x2=3.12500000000000000000 f2=0.0165919
4:  x2=3.18750000000000000000 f2=-0.0458912
5:  x2=3.15625000000000000000 f2=-0.0146568
6:  x2=3.14062500000000000000 f2=0.000967653
7:  x2=3.14843750000000000000 f2=-0.00684479
8:  x2=3.14453125000000000000 f2=-0.00293859
9:  x2=3.14257812500000000000 f2=-0.000985471
10:  x2=3.14160156250000000000 f2=-8.90891e-06
11:  x2=3.14111328125000000000 f2=0.000479372
12:  x2=3.14135742187500000000 f2=0.000235232
13:  x2=3.14147949218750000000 f2=0.000113161
14:  x2=3.14154052734375000000 f2=5.21262e-05
15:  x2=3.14157104492187500000 f2=2.16087e-05
16:  x2=3.14158630371093750000 f2=6.34988e-06
17:  x2=3.14159393310546875000 f2=-1.27952e-06
18:  x2=3.14159011840820312500 f2=2.53518e-06
19:  x2=3.14159202575683593750 f2=6.27833e-07
20:  x2=3.14159297943115234375 f2=-3.25841e-07
21:  x2=3.14159250259399414062 f2=1.50996e-07
22:  x2=3.14159274101257324219 f2=-8.74228e-08
23:  x2=3.14159262180328369141 f2=3.17865e-08
24:  x2=3.14159268140792846680 f2=-2.78181e-08
25:  x2=3.14159265160560607910 f2=1.98419e-09
26:  x2=3.14159266650676727295 f2=-1.2917e-08
27:  x2=3.14159265905618667603 f2=-5.46639e-09
28:  x2=3.14159265533089637756 f2=-1.7411e-09
29:  x2=3.14159265346825122833 f2=1.21542e-10
30:  x2=3.14159265439957380295 f2=-8.09781e-10
31:  x2=3.14159265393391251564 f2=-3.44119e-10
32:  x2=3.14159265370108187199 f2=-1.11289e-10
33:  x2=3.14159265358466655016 f2=5.12669e-12
34:  x2=3.14159265364287421107 f2=-5.3081e-11
35:  x2=3.14159265361377038062 f2=-2.39771e-11
36:  x2=3.14159265359921846539 f2=-9.42523e-12
37:  x2=3.14159265359194250777 f2=-2.14927e-12
38:  x2=3.14159265358830452897 f2=1.48871e-12
39:  x2=3.14159265359012351837 f2=-3.3028e-13
40:  x2=3.14159265358921402367 f2=5.79215e-13
41:  x2=3.14159265358966877102 f2=1.24467e-13
42:  x2=3.14159265358989614469 f2=-1.02906e-13
43:  x2=3.14159265358978245786 f2=1.07806e-14
44:  x2=3.14159265358983930128 f2=-4.60628e-14
45:  x2=3.14159265358981087957 f2=-1.76411e-14
46:  x2=3.14159265358979666871 f2=-3.43025e-15
47:  x2=3.14159265358978956328 f2=3.67517e-15
48:  x2=3.14159265358979311600 f2=1.22461e-16
49:  x2=3.14159265358979489235 f2=-1.6539e-15
50:  x2=3.14159265358979400418 f2=-7.65718e-16
51:  x2=3.14159265358979356009 f2=-3.21629e-16
52:  x2=3.14159265358979311600 f2=1.22461e-16
main:
	 x= 3.14159265358979311600
	 pi= 3.14159265358979311600
	 diff= 0.00000000000000000000


p2.c
---
> #include<stdio.h>
> #include<math.h>
> #include<stdlib.h>
> #include "p2.h"
> double min( double (*f)(double x), double x1, double x3, double x5)
> {
> double x2,x4;
> int count=1;
> printf("min:\n");
>    while(1)
>      {
>          printf("%d:  ",count);
>          printf("x3=%.20f f3=%f\n",x3,f(x3));
>           x2 = (x1+x3)/2;
>           x4 = (x3+x5)/2;        
>           count++;
>      if(x2 <= x1 || x2 >= x3 || x4 <= x3 || x4 >= x5)
>              break;
>      if(f(x2) < f(x3))
>            {
>              x5 = x3;
>              x3 = x2;
>            }
>       else if(f(x4) < f(x3))
>            {
>              x1 = x3;
>              x3 = x4; 
>            }
>       else
>            {
>              x1 = x2;
>              x5 = x4;
>            }
>      }
> return x3;
> }
> double error(double x)
> {
> double err[80],mean_square_error,mean=0,fs=8000.0;

*** no need for any arrays here

> for(int i=0;i<nz;i++)
> {
> err[i]=z[i]-sin((2*4*atan(1)*x*i)/fs);
> mean=mean+(err[i]*err[i]);
> }
> mean_square_error=mean/nz;
> return mean_square_error;
> }
> int main()
> {
> double x;
> x=min(error,1160.0,1280.0,1320.0);  //x1 = 1160.0, x3 = 1280.0, x5 = 1320.0
> printf("main:\n");
> printf("\t x=%.20f",x);
> }

Compile: gcc -std=c99 -pedantic -Wall -g -lm -o p2 p2.c


Run: ./p2
---
min:
1:  x3=1280.00000000000000000000 f3=0.535384
2:  x3=1220.00000000000000000000 f3=0.209621
3:  x3=1220.00000000000000000000 f3=0.209621
4:  x3=1235.00000000000000000000 f3=0.163666
5:  x3=1235.00000000000000000000 f3=0.163666
6:  x3=1235.00000000000000000000 f3=0.163666
7:  x3=1235.00000000000000000000 f3=0.163666
8:  x3=1235.00000000000000000000 f3=0.163666
9:  x3=1235.00000000000000000000 f3=0.163666
10:  x3=1234.76562500000000000000 f3=0.163662
11:  x3=1234.88281250000000000000 f3=0.163661
12:  x3=1234.82421875000000000000 f3=0.163661
13:  x3=1234.85351562500000000000 f3=0.163661
14:  x3=1234.83886718750000000000 f3=0.163661
15:  x3=1234.84619140625000000000 f3=0.163661
16:  x3=1234.84619140625000000000 f3=0.163661
17:  x3=1234.84619140625000000000 f3=0.163661
18:  x3=1234.84527587890625000000 f3=0.163661
19:  x3=1234.84573364257812500000 f3=0.163661
20:  x3=1234.84550476074218750000 f3=0.163661
21:  x3=1234.84550476074218750000 f3=0.163661
22:  x3=1234.84550476074218750000 f3=0.163661
23:  x3=1234.84553337097167968750 f3=0.163661
24:  x3=1234.84553337097167968750 f3=0.163661
25:  x3=1234.84553337097167968750 f3=0.163661
26:  x3=1234.84553337097167968750 f3=0.163661
27:  x3=1234.84553158283233642578 f3=0.163661
28:  x3=1234.84553158283233642578 f3=0.163661
29:  x3=1234.84553158283233642578 f3=0.163661
30:  x3=1234.84553158283233642578 f3=0.163661
31:  x3=1234.84553158283233642578 f3=0.163661
32:  x3=1234.84553158283233642578 f3=0.163661
33:  x3=1234.84553158283233642578 f3=0.163661
34:  x3=1234.84553158283233642578 f3=0.163661
35:  x3=1234.84553158283233642578 f3=0.163661
36:  x3=1234.84553158283233642578 f3=0.163661
37:  x3=1234.84553158457856625319 f3=0.163661
38:  x3=1234.84553158457856625319 f3=0.163661
39:  x3=1234.84553158457856625319 f3=0.163661
40:  x3=1234.84553158457856625319 f3=0.163661
41:  x3=1234.84553158457856625319 f3=0.163661
42:  x3=1234.84553158463313593529 f3=0.163661
43:  x3=1234.84553158463313593529 f3=0.163661
44:  x3=1234.84553158463313593529 f3=0.163661
45:  x3=1234.84553158463313593529 f3=0.163661
46:  x3=1234.84553158463313593529 f3=0.163661
47:  x3=1234.84553158463313593529 f3=0.163661
48:  x3=1234.84553158463313593529 f3=0.163661
49:  x3=1234.84553158463313593529 f3=0.163661
50:  x3=1234.84553158463313593529 f3=0.163661
main:
	 x=1234.84553158463313593529
